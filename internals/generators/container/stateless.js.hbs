/*
*
* {{properCase name }}
*
*/

import React, { PropTypes } from 'react';
import { connect } from 'react-redux';
{{#if wantHeaders}}
import Helmet from 'react-helmet';
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl';
{{/if}}
{{#if wantActionsAndReducer}}
import { createStructuredSelector } from 'reselect';
{{/if}}

{{#if wantActionsAndReducer}}
import makeSelect{{properCase name}} from './selectors';
{{/if}}
{{#if wantMessages}}
import messages from './messages';
{{/if}}

function {{ properCase name }}() {
  return (
    <div>
    {{#if wantHeaders}}
      <Helmet
        title="{{properCase name}}"
        meta={{curly true}}[
          {{curly true}} name: 'description', content: 'Description of {{properCase name}}' {{curly}},
        ]{{curly}}
      />
    {{/if}}
    {{#if wantMessages}}
      <FormattedMessage {...messages.header} />
    {{/if}}
    </div>
  );
}

{{ properCase name }}.propTypes = {
  dispatch: PropTypes.func.isRequired,
};

{{#if wantActionsAndReducer}}
const mapStateToProps = createStructuredSelector({
  {{name}}: makeSelect{{properCase name}}(),
});
{{/if}}

function mapDispatchToProps(dispatch) {
  return {
    dispatch,
  };
}

{{#if wantActionsAndReducer}}
export default connect(mapStateToProps, mapDispatchToProps)({{ properCase name }});
{{else}}
export default connect(null, mapDispatchToProps)({{ properCase name }});
{{/if}}
